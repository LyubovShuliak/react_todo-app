{"version":3,"sources":["components/footer/Footer.jsx","components/header/Header.jsx","components/task/Task.jsx","App.js","index.js"],"names":["Footer","todos","setTodos","className","filter","el","includes","length","href","onClick","map","isHidden","find","type","uncompleted","localStorage","setItem","JSON","stringify","Header","input","setInput","placeholder","value","onChange","e","target","onKeyUp","code","todo","key","uuidv4","isChecked","Task","item","id","updatedTask","toggleCompletedTask","checked","htmlFor","onDoubleClick","updatedList","filtered","onKeyDown","App","useState","useEffect","tods","parse","getItem","updatedTodoItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afb2778f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nconst Footer = ({todos, setTodos})=>{\r\n   \r\n  const clearCompleted = () => {\r\n    const uncompleted = todos.filter((el) => el.className !== \"completed\");\r\n    localStorage.setItem(\"todo-list\", JSON.stringify(uncompleted));\r\n    setTodos(uncompleted);\r\n  };\r\n  \r\n\r\n  const showCompleted = () =>\r\n    setTodos(\r\n      todos.map((el) =>\r\n        el.className !== \"completed\"\r\n          ? { ...el, isHidden: true }\r\n          : { ...el, isHidden: false }\r\n      )\r\n    );\r\n\r\n  const showActive = () =>\r\n    setTodos(\r\n      todos.map((el) =>\r\n        el.className === \"completed\"\r\n          ? { ...el, isHidden: true }\r\n          : { ...el, isHidden: false }\r\n      )\r\n    );\r\n\r\n  const showAll = () =>\r\n    setTodos(\r\n      todos.map((el) => {\r\n        return { ...el, isHidden: false };\r\n      })\r\n    );\r\n\r\n  \r\n    return(\r\n      <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        {todos.filter((el) => !el.className.includes(\"completed\")).length}{\" \"}\r\n        items left\r\n      </span>\r\n\r\n      <ul className=\"filters\">\r\n        <li>\r\n          <a href=\"#/\" className=\"selected\" onClick={showAll}>\r\n            All\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#/active\" onClick={showActive}>\r\n            Active\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#/completed\" onClick={showCompleted}>\r\n            Completed\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      {todos.find((el) => el.className === \"completed\") ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"clear-completed\"\r\n          onClick={clearCompleted}\r\n        >\r\n          Clear completed\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </footer>\r\n    )\r\n}\r\nexport default Footer","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nconst Header = ({todos, setTodos, input, setInput})=>{\r\n\r\n    const createTask = (e) => {\r\n        if (e.target.value && e.code === \"Enter\") {\r\n          const todo = [\r\n            ...todos,\r\n            {\r\n              value: e.target.value,\r\n              key: uuidv4(),\r\n              className: \"\",\r\n              isHidden: false,\r\n              isChecked: false,\r\n            },\r\n          ];\r\n          localStorage.setItem(\"todo-list\", JSON.stringify(todo));\r\n          setInput(\"\");\r\n    \r\n          setTodos(todo);\r\n        }\r\n      };\r\n    return(<header className=\"header\" type=\"submit\">\r\n    <h1>todos</h1>\r\n\r\n    <input\r\n      className=\"new-todo\"\r\n      placeholder=\"What needs to be done?\"\r\n      value={input}\r\n      onChange={(e) => setInput(e.target.value)}\r\n      onKeyUp={createTask}\r\n    />\r\n  </header>)\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst Task = ({ todos, setTodos, item }) => {\r\n     \r\n  const toggleCompletedTask = (item) => {\r\n    const updatedTask = {\r\n      ...item,\r\n      isChecked: !item.isChecked,\r\n      className: !item.isChecked ? \"completed\" : \"\",\r\n    };\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.key === updatedTask.key) {\r\n          return updatedTask;\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const openEditField = (e) => {\r\n    const updatedList = todos.map((el) => {\r\n      if (el.key == e.target.htmlFor) {\r\n        const elem = {\r\n          ...el,\r\n          className: `editing`,\r\n        };\r\n\r\n        return elem;\r\n      }\r\n      return el;\r\n    });\r\n    setTodos(updatedList);\r\n  };\r\n\r\n  const destroy = (e) => {\r\n    const filtered = todos.filter((el) => el.key !== e.target.id);\r\n    setTodos([...filtered]);\r\n  };\r\n  const edit = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      setTodos(\r\n        todos.map((item) =>\r\n          item.key == e.target.id\r\n            ? {\r\n                ...item,\r\n                className: \"\",\r\n                value: e.target.value ? e.target.value : item.value,\r\n              }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={item.className} key={item.key}>\r\n      <div className=\"view\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle\"\r\n          id={item.key}\r\n          onChange={() => toggleCompletedTask(item)}\r\n          checked={item.isChecked}\r\n        />\r\n        <label htmlFor={item.key} onDoubleClick={openEditField}>\r\n          {item.value}\r\n        </label>\r\n        <button\r\n          id={item.key}\r\n          type=\"button\"\r\n          className=\"destroy\"\r\n          onClick={destroy}\r\n        />\r\n      </div>\r\n      <input type=\"text\" className=\"edit\" id={item.key} onKeyDown={edit} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Footer from \"./components/footer/Footer\";\r\nimport Header from \"./components/header/Header\";\r\nimport Task from \"./components/task/Task\";\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const tods = JSON.parse(localStorage.getItem(\"todo-list\"));\r\n\r\n    if (tods) {\r\n      setTodos(tods);\r\n    } else {\r\n      tods = localStorage.setItem(\"todo-list\", JSON.stringify([]));\r\n      setTodos(tods);\r\n    }\r\n  }, []);\r\n\r\n  const toggleCompletedAll = (e) => {\r\n    const updatedTodoItems = todos.map((el) => {\r\n      return {\r\n        ...el,\r\n        className: e.target.checked ? \"completed\" : \"\",\r\n        isChecked: e.target.checked,\r\n      };\r\n    });\r\n\r\n    setTodos(updatedTodoItems);\r\n  };\r\n\r\n \r\n  return (\r\n    <section className=\"todoapp\">\r\n      <Header\r\n        todos={todos}\r\n        setTodos={setTodos}\r\n        input={input}\r\n        setInput={setInput}\r\n      />\r\n      <section className=\"main\">\r\n        {todos.length ? (\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"toggle-all\"\r\n            className=\"toggle-all\"\r\n            onChange={toggleCompletedAll}\r\n          />\r\n        ) : null}\r\n        {todos.length ? (\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n        ) : null}\r\n\r\n        <ul className=\"todo-list\">\r\n          {todos.map((item) => {\r\n            if (item.isHidden === false) {\r\n              return (\r\n              <Task setTodos ={setTodos} todos={todos} item={item} />\r\n              );\r\n            }\r\n          })}\r\n        </ul>\r\n      </section>\r\n\r\n      {todos.length ? (\r\n        <Footer\r\n          todos={todos}\r\n          setTodos={setTodos}\r\n      \r\n        />\r\n      ) : null}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}